swagger: "2.0"
info:
  version: "0.0.0"
  title: "Gentry Core API"
  description: ""
host: "gentry.example"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
- "application/octet-stream"
produces:
- "application/json"
paths:
  "/{project}/store/":
    parameters:
    - name: project
      in: path
      type: string
      required: true
    post:
      operationId: "storeEvent"
      responses:
        201:
          description: "the event was stored"
  "/projects/":
    get:
      operationId: "getProjectList"
  "/event-types/":
    get:
      operationId: "getEventTypeList"
  "/events/":
    parameters:
    - name: project
      in: query
      type: string
    - name: type
      in: query
      type: string
    - name: search
      in: query
      type: string
    - name: group
      in: query
      type: integer
    - name: limit
      in: query
      type: integer
      default: 50
    - name: offset
      in: query
      type: integer
      default: 0
    - name: archived
      in: query
      type: boolean
    get:
      operationId: "getEventList"
      responses:
        200:
          description: "object of total/limit/offset/events"
  "/event/{id}/":
    parameters:
    - name: id
      in: path
      type: string
      required: true
    get:
      operationId: "getEventDetail"
      responses:
        200:
          description: "event object"
        404:
          description: "event not found"
  "/event/{id}/archive/":
    parameters:
    - name: id
      in: path
      type: string
      required: true
    post:
      operationId: "archiveEvent"
      responses:
        200:
          description: "event object"
        404:
          description: "event not found"
  "/groups/":
    parameters:
    - name: project
      in: query
      type: string
    - name: type
      in: query
      type: string
    - name: search
      in: query
      type: string
    - name: limit
      in: query
      type: integer
      default: 50
    - name: offset
      in: query
      type: integer
      default: 0
    - name: archived
      in: query
      type: boolean
    get:
      operationId: "getGroupList"
      responses:
        200:
          description: "object of total/limit/offset/groups"
  "/group/{id}/":
    parameters:
    - name: id
      in: path
      type: string
      required: true
    get:
      operationId: "getGroupDetail"
      responses:
        200:
          description: "group object"
        404:
          description: "group not found"
  "/group/{id}/archive/":
    parameters:
    - name: id
      in: path
      type: string
      required: true
    post:
      operationId: "archiveGroup"
      responses:
        200:
          description: "group object"
        404:
          description: "group not found"
